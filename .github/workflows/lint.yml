name: Lint

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

# jobs:
#   black:
#     name: Black Check
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         python-version: ["3.10"]
#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up Python ${{ matrix.python-version }}
#       uses: actions/setup-python@v3
#       with:
#         python-version: ${{ matrix.python-version }}
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install black
#     - name: Black Check
#       uses: jpetrucciani/black-check@23.7.0
#       with:
#         path: ./giford/
#         # Optional Black flags (refer to `black --help`)
#         #black_flags: # optional, default is

jobs:
  lint-black:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black
    - name: Black Check
      # You may pin to the exact commit or the version.
      # uses: jpetrucciani/black-check@3d09c10eb21ceb5fd6038067fd13153bb6768f9f
      uses: jpetrucciani/black-check@22.12.0
      with:
        # File or directory to run black on
        path: ./giford/
        # Optional Black flags (refer to `black --help`)
        #black_flags: # optional, default is
        
  # pylint:
  #   name: Pylint Check
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version: ["3.10"]
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v3
  #     with:
  #       python-version: ${{ matrix.python-version }}
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install pylint
  #   - name: Analysing the code with pylint
  #     # run this but disable it from causing failure. already not required but still annoying
  #     continue-on-error: true
  #     run: |
  #       pylint $(git ls-files '*.py')
